<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>쓰레드 on SSAFY 서울 CS 스터디 블로그</title>
        <link>https://SSAFY-Seoul-CS-Study.github.io/tags/%EC%93%B0%EB%A0%88%EB%93%9C/</link>
        <description>Recent content in 쓰레드 on SSAFY 서울 CS 스터디 블로그</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 11 Feb 2023 22:06:15 +0900</lastBuildDate><atom:link href="https://SSAFY-Seoul-CS-Study.github.io/tags/%EC%93%B0%EB%A0%88%EB%93%9C/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>프로세스(Process) 와 쓰레드(Thread) 의 차이점을 설명해주세요</title>
        <link>https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/</link>
        <pubDate>Sat, 11 Feb 2023 22:06:15 +0900</pubDate>
        
        <guid>https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/</guid>
        <description>&lt;h3 id=&#34;프로그램-program&#34;&gt;프로그램 (Program)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled.png&#34;
	width=&#34;804&#34;
	height=&#34;216&#34;
	srcset=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled_hu3920c3e2bd36df892dd9e37e45b2c504_6538_480x0_resize_box_3.png 480w, https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled_hu3920c3e2bd36df892dd9e37e45b2c504_6538_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;372&#34;
		data-flex-basis=&#34;893px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;ex. 카카오톡, 웹 브라우저 등&lt;/p&gt;
&lt;h3 id=&#34;프로세스-process&#34;&gt;프로세스 (Process)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled1.png&#34;
	width=&#34;2991&#34;
	height=&#34;1588&#34;
	srcset=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled1_hu2f1d035cc0d48da2e614cb94e0b34e8f_105237_480x0_resize_box_3.png 480w, https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled1_hu2f1d035cc0d48da2e614cb94e0b34e8f_105237_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;프로세스란&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;운영체제로부터 자원을 할당받는 작업의 단위&lt;/li&gt;
&lt;li&gt;실행되고 있는 프로그램&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;특징&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각각 독립된 메모리 영역을 할당 받음 (Code, Data, Stack, Heap)
&lt;ul&gt;
&lt;li&gt;코드 : 실행할 프로그램의 코드나 명령어들을 기계어 형태로 저장. 컴파일 → 메모리에 올린 것 (0100101..) 전체 일감&lt;/li&gt;
&lt;li&gt;데이터 : 생성자로 생성하지 않고 선언한 전역변수 ex. static, global&lt;/li&gt;
&lt;li&gt;힙 : 동적으로 생성된 데이터. 생성자로 만들어짐&lt;/li&gt;
&lt;li&gt;스택 : 호출된 함수, 지역변수 등 임시 데이터를 저장. 호출된 함수가 종료되었을 때 되돌아오기 위한 경로를 저장&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;프로세스당 최소 1개의 스레드를 가짐&lt;/li&gt;
&lt;li&gt;한 프로세스가 다른 프로세스의 자원에 접근하려면 IPC(inter process communication)를 사용해야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;스레드-thread&#34;&gt;스레드 (Thread)&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled2.png&#34;
	width=&#34;2991&#34;
	height=&#34;1588&#34;
	srcset=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled2_hud72d32e3df20dbeeb166ed35faf7779d_74476_480x0_resize_box_3.png 480w, https://SSAFY-Seoul-CS-Study.github.io/p/%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4process-%EC%99%80-%EC%93%B0%EB%A0%88%EB%93%9Cthread-%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90%EC%9D%84-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled2_hud72d32e3df20dbeeb166ed35faf7779d_74476_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;188&#34;
		data-flex-basis=&#34;452px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스레드란?
&lt;ul&gt;
&lt;li&gt;할당 받은 자원을 이용하는 실행 단위&lt;/li&gt;
&lt;li&gt;프로세스 내에 반드시 하나 이상 생성됨 (→ 여러 개 생길 수 있음)&lt;/li&gt;
&lt;li&gt;함수를 실행한 결과를 저장&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;특징
&lt;ul&gt;
&lt;li&gt;프로세스 내에서 각각 Stack만 따로 할당 받고, Code, Data, Heap 영역은 공유&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=iks_Xb9DtTM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;프로세스와 스레드 비유 : 요리&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프로그램 : 레시피&lt;/li&gt;
&lt;li&gt;프로세서 : 요리사 (프로세스가 동작될 수 있도록 하는 하드웨어 (=cpu))&lt;/li&gt;
&lt;li&gt;프로세스 : 대량 주문이 들어오는 식당에서 끊임없이 만들어내는 각각의 요리 메뉴&lt;/li&gt;
&lt;li&gt;컴퓨터는 프로세스마다 자원을 분할해서 할당함 ex. 라면 끓이는 섹션, 김밥 마는 섹션, 햄버거 만드는 섹션&lt;/li&gt;
&lt;li&gt;라면 끓이는 섹션에 버너 4개 있다면 스레드도 4개를 만들어서 라면이 최대 4개까지 동시에 끓여지도록 프로그래밍&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;프로세스-vs-스레드&#34;&gt;프로세스 vs. 스레드&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;프로세스&lt;/th&gt;
&lt;th&gt;스레드&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;자원을 공유하지 않음 (독립된 메모리 영역을 할당)&lt;/td&gt;
&lt;td&gt;자원을 공유 (Code, Data, Heap 영역)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;↓&lt;/td&gt;
&lt;td&gt;↓&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;다른 프로세스와 정보 공유를 위해 IPC를 사용&lt;/td&gt;
&lt;td&gt;다른 스레드와 정보 공유가 용이&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;하나의 프로세스에 문제가 생겨도 다른 프로세스에 영향을 미치지 않음&lt;/td&gt;
&lt;td&gt;한 스레드에 문제가 생기면 전체 프로세스에도 영향을 미침&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
        </item>
        
    </channel>
</rss>
