<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>멀티쓰레드 on SSAFY 서울 CS 스터디 블로그</title>
        <link>https://SSAFY-Seoul-CS-Study.github.io/tags/%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C/</link>
        <description>Recent content in 멀티쓰레드 on SSAFY 서울 CS 스터디 블로그</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 20 Feb 2023 22:54:22 +0900</lastBuildDate><atom:link href="https://SSAFY-Seoul-CS-Study.github.io/tags/%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>멀티프로세스와 멀티쓰레드는 각각 어떤건지 설명해주세요</title>
        <link>https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/</link>
        <pubDate>Mon, 20 Feb 2023 22:54:22 +0900</pubDate>
        
        <guid>https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/</guid>
        <description>&lt;h3 id=&#34;멀티-프로세스-멀티-스레드를-왜-사용할까&#34;&gt;멀티 프로세스, 멀티 스레드를 왜 사용할까?&lt;/h3&gt;
&lt;p&gt;| 단일 프로세스 시스템 | - 한 번에 하나의 프로그램만 실행&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;단점 : CPU 사용률이 좋지 않음&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;↓&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;멀티 프로그래밍&lt;/td&gt;
&lt;td&gt;- 여러 개의 프로그램을 메모리에 올려놓고 동시에 실행시킴&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;단점 : 하나의 프로세스의 CPU 사용 시간이 길어지면 다른 프로세스는 계속 대기 |
| ↓ |  |
| 멀티 태스킹 | - 멀티 프로그래밍 + 시간을 아주 짧은 시간으로 쪼개서 프로세스들을 번갈아 가면서 실행 (→ 동시에 여러 프로그램이 실행되는 것처럼 느낌) |&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;멀티 태스킹의 한계&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하나의 프로세스가 동시에 여러 작업 수행 X → 여러 프로세스 만들어야 함
&lt;ul&gt;
&lt;li&gt;프로세스의 컨텍스트 스위칭은 무거운 작업&lt;/li&gt;
&lt;li&gt;프로세스끼지 데이터 공유 까다로움&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;듀얼 코어 등장 이후 활용 방법 필요&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;→ 멀티 프로세스, 멀티 스레딩&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;멀티-프로세스-멀티-스레드&#34;&gt;멀티 프로세스, 멀티 스레드&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;프로그래밍에서 함께 처리하기 위해 사용하는 기술
프로그램의 둘 이상의 부분을 동시에 실행하여 CPU를 최대한 활용&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;멀티-프로세스&#34;&gt;멀티 프로세스&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled.png&#34;
	width=&#34;556&#34;
	height=&#34;419&#34;
	srcset=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled_hubfaaa651b3575368663237c640467e3f_70111_480x0_resize_box_3.png 480w, https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled_hubfaaa651b3575368663237c640467e3f_70111_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;132&#34;
		data-flex-basis=&#34;318px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled1.png&#34;
	width=&#34;658&#34;
	height=&#34;365&#34;
	srcset=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled1_hu62bd3db07a7e4d6b252bc4fece96ccb1_156667_480x0_resize_box_3.png 480w, https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled1_hu62bd3db07a7e4d6b252bc4fece96ccb1_156667_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;180&#34;
		data-flex-basis=&#34;432px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다수의 프로세스가 서로 협력적으로 일을 처리&lt;/li&gt;
&lt;li&gt;둘 이상의 코어가 프로세스를 병렬로 분담해서 병행하여 실행
&lt;ul&gt;
&lt;li&gt;병렬 처리 : 여러 작업을 동시에 실행&lt;/li&gt;
&lt;li&gt;병행 처리 : 하나의 코어가 여러 프로세스를 돌아가면서 조금씩 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;fork를 통해 프로세스를 다수 개로 늘려 여러 개의 프로그램들을 병렬로 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;참고) 푸드트럭에의 비유&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;병렬 처리 : 푸드 트럭에 네 대의 로봇이 있다면, 각각의 로봇이 한 종류의 버거를 맡아서 요리&lt;/li&gt;
&lt;li&gt;병행 처리 : 네 개의 버거를 두 대의 로봇이 만들 때 → 동시에 버거를 네 개 만드는 것처럼
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;로봇1&lt;/th&gt;
&lt;th&gt;빵 깔기&lt;/th&gt;
&lt;th&gt;빵 깔기&lt;/th&gt;
&lt;th&gt;패티 올리기&lt;/th&gt;
&lt;th&gt;패티 올리기&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;로봇2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;야채 썰어 올리기&lt;/td&gt;
&lt;td&gt;야채 썰어 올리기&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;멀티-스레드&#34;&gt;멀티 스레드&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled2.png&#34;
	width=&#34;512&#34;
	height=&#34;205&#34;
	srcset=&#34;https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled2_hu2f161c42ab4cd609ece8cb3c97810596_7194_480x0_resize_box_3.png 480w, https://SSAFY-Seoul-CS-Study.github.io/p/%EB%A9%80%ED%8B%B0%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%EB%A9%80%ED%8B%B0%EC%93%B0%EB%A0%88%EB%93%9C%EB%8A%94-%EA%B0%81%EA%B0%81-%EC%96%B4%EB%96%A4%EA%B1%B4%EC%A7%80-%EC%84%A4%EB%AA%85%ED%95%B4%EC%A3%BC%EC%84%B8%EC%9A%94/images/Untitled2_hu2f161c42ab4cd609ece8cb3c97810596_7194_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;249&#34;
		data-flex-basis=&#34;599px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하나의 프로세스 안에서 작업을 여러 스레드를 사용하여 동시에 처리
ex. 채팅 앱 : 사용자가 메시지 입력하는 도중에도 상대방이 새로운 메시지를 보냈는지 확인&lt;/li&gt;
&lt;li&gt;하나의 프로그램 안에서 병렬 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;참고) 푸드트럭에의 비유&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;한 개의 버거를 요리하는 작업이 하나의 프로세스일 때,&lt;/li&gt;
&lt;li&gt;스레드 : 빵을 데우는 작업, 패티를 굽는 작업, 야채를 써는 작업&lt;/li&gt;
&lt;li&gt;이를 병행 처리 : 빵 오븐에 → 패티 팬에 → 토마토 썰기 → 오븐에서 빵 꺼내기 → …&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;멀티-프로세스-멀티-스레드의-활용&#34;&gt;멀티 프로세스, 멀티 스레드의 활용&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;멀티 프로세스&lt;/th&gt;
&lt;th&gt;멀티 스레드&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;장점&lt;/td&gt;
&lt;td&gt;하나의 프로세스에 문제가 생겨도 다른 프로세스에 문제가 생기지 않음&lt;/td&gt;
&lt;td&gt;컨텍스트 스위칭할 때 공유하고 있는 메모리 만큼의 메모리 자원을 아낌&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;자원의 효율성 증가, 응답 속도 빨라짐&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;단점&lt;/td&gt;
&lt;td&gt;컨텍스트 스위칭이 무거움&lt;/td&gt;
&lt;td&gt;자원을 공유 → 스레드 하나가 프로세스 내 자원을 망치면 모든 프로세스가 종료됨, 동기화 문제&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;예시&lt;/td&gt;
&lt;td&gt;크롬 : 하나의 프로세스에 멀티 스레드를 사용하는 인터넷 익스플로러와 달리 여러 개의 프로세스를 사용&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;크롬 : 하나의 화면에 문제 생겨도 다른 화면에 미치는 영향 적음 | 워드 프로세서 : 문서를 편집하면서 틀린 글자를 찾는 작업을 독립적인 스레드로 구현&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;익스플로러 : 하나의 화면에 문제 생겨서 강제 종료하면 익스플로러 전체가 종료됨 |&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;참고 자료&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;멀티 프로세스, 멀티 스레딩의 등장 : &lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=QmtYKZC0lMU&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://www.youtube.com/watch?v=QmtYKZC0lMU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;푸드트럭 비유 : &lt;a class=&#34;link&#34; href=&#34;https://hongong.hanbit.co.kr/cpu%EA%B0%80-%EB%A9%80%ED%8B%B0%ED%83%9C%EC%8A%A4%ED%82%B9%EC%9D%84-%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4-vs-%EC%8A%A4%EB%A0%88%EB%93%9C/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://hongong.hanbit.co.kr/cpu가-멀티태스킹을-하는-방법-프로세스-vs-스레드/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
